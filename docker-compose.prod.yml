name: E-Commerce Microservices production

services:
  auth-service:
    container_name: auth-service
    build:
      context: ./services/Auth/Auth.Web
      dockerfile: Dockerfile.prod
    image: auth-service-prod
    environment:
      - AUTH_DB_HOST=database
      - AUTH_DB_NAME=${AUTH_DB_NAME}
      - AUTH_DB_USERNAME=${AUTH_DB_USERNAME}
      - AUTH_DB_PASSWORD=${AUTH_DB_PASSWORD}
      - AUTH_JWT_SECRET=${AUTH_JWT_SECRET}
      - AUTH_JWT_ISSUER=${AUTH_JWT_ISSUER}
      - AUTH_JWT_AUDIENCE=${AUTH_JWT_AUDIENCE}
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "8080:80"
    depends_on:
      database:
        - condition: service_healthy
    restart: unless-stopped

  database:
    image: postgres:16
    container_name: auth-db
    environment:
      - POSTGRES_DB=${AUTH_DB_NAME}
      - POSTGRES_USER=${AUTH_DB_USERNAME}
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}
    volumes:
      - auth-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 10s
      retries: 10

volumes:
  auth-data: